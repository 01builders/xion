name: Create Release and Publish Binary

on:
  push:
    branches:
      - froch/version
    tags:
      - '*'

jobs:

  build-amd64:
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: burntnetwork/xion
          tags: |
            type=semver,pattern={{version}},priority=1000
            type=sha,priority=700

      - name: Build docker image for linux/amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Copy xiond binary from linux/amd64 container
        id: copy-binary-amd64
        run: |
          docker create --name temp_container-amd64 $(echo ${{ steps.meta.outputs.tags }} | awk '{print $1}')
          docker cp temp_container-amd64:/usr/bin/xiond ./xiond-linux-amd64
          ./xiond-linux-amd64 version --long
          docker rm -v temp_container-amd64

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: xiond-linux-amd64
          path: ./xiond-linux-amd64

  build-zip:
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Zip source
        run: |
          zip -r xiond.src.zip . -x 'docker/**\*' '.github/**\*' 'xiond.src.zip'

      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: xiond.src.zip
          path: xiond.src.zip
          if-no-files-found: error

  build-tgz:
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Create tgz
        run: |
          tar --exclude='./.github' --exclude='./docker' -czvf /tmp/xiond.src.tgz .

      - name: Upload tgz
        uses: actions/upload-artifact@v3
        with:
          name: xiond.src.tgz
          path: /tmp/xiond.src.tgz
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    environment: CI
    needs:
      - build-amd64
      - build-zip
      - build-tgz

    steps:
      - name: Download xiond-linux-amd64
        uses: actions/download-artifact@v3
        with:
          name: xiond-linux-amd64

      - name: Download zip
        uses: actions/download-artifact@v3
        with:
          name: xiond.src.zip

      - name: Download tgz
        uses: actions/download-artifact@v3
        with:
          name: xiond.src.tgz

      - name: Create and Update Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactContentType: application/octet-stream
          artifacts: xiond-linux-amd64,xiond.src.zip,xiond.src.tgz
          draft: true
          generateReleaseNotes: true
          name: Release ${{ github.ref }}
          prerelease: true
          tag: ${{ github.ref }}
          token: ${{ secrets.GH_RELEASE_TOKEN }}
